/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <sstream>
#include <limits>
#include <map>
#include "ifcpp/reader/ReaderUtil.h"
#include "ifcpp/writer/WriterUtil.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingException.h"
#include "ifcpp/IFC4X3/include/IfcPropertySetDefinitionSelect.h"
#include "ifcpp/IFC4X3/include/IfcPropertySetDefinition.h"
#include "ifcpp/IFC4X3/include/IfcPropertySetDefinitionSet.h"

// TYPE IfcPropertySetDefinitionSet = SET [1:?] OF IfcPropertySetDefinition;
shared_ptr<BuildingObject> IFC4X3::IfcPropertySetDefinitionSet::getDeepCopy( BuildingCopyOptions& options )
{
	shared_ptr<IfcPropertySetDefinitionSet> copy_self( new IfcPropertySetDefinitionSet() );
	for( size_t ii=0; ii<m_vec.size(); ++ii )
	{
		auto item_ii = m_vec[ii];
		if( item_ii )
		{
			copy_self->m_vec.emplace_back( dynamic_pointer_cast<IfcPropertySetDefinition>( item_ii->getDeepCopy( options ) ) );
		}
	}
	return copy_self;
}
void IFC4X3::IfcPropertySetDefinitionSet::getStepParameter( std::stringstream& stream, bool is_select_type ) const
{
	if( is_select_type ) { stream << "IFCPROPERTYSETDEFINITIONSET("; }
	writeEntityList( stream, m_vec );
	if( is_select_type ) { stream << ")"; }
}
shared_ptr<IFC4X3::IfcPropertySetDefinitionSet> IFC4X3::IfcPropertySetDefinitionSet::createObjectFromSTEP( const std::string& arg, const std::map<int,shared_ptr<BuildingEntity> >& map, std::stringstream& errorStream )
{
	if( arg.compare( "$" ) == 0 ) { return shared_ptr<IfcPropertySetDefinitionSet>(); }
	if( arg.compare( "*" ) == 0 ) { return shared_ptr<IfcPropertySetDefinitionSet>(); }
	shared_ptr<IfcPropertySetDefinitionSet> type_object( new IfcPropertySetDefinitionSet() );
	readEntityReferenceList(  arg, type_object->m_vec, map, errorStream );
	return type_object;
}
